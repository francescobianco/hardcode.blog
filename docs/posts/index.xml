<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on HARDCODE.BLOG</title>
    <link>https://hardcode.blog/posts/</link>
    <description>Recent content in Posts on HARDCODE.BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-en</language>
    <copyright>¬© Francesco Bianco</copyright>
    <lastBuildDate>Tue, 07 Oct 2025 10:25:30 +0000</lastBuildDate>
    <atom:link href="https://hardcode.blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>La trappola dell&#39;autoimprenditorialit√† e come gli informatici ci cadono troppo facilmente</title>
      <link>https://hardcode.blog/posts/20251007-imprenditore-di-se-stesso-ma-anche-no/</link>
      <pubDate>Tue, 07 Oct 2025 10:25:30 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20251007-imprenditore-di-se-stesso-ma-anche-no/</guid>
      <description>Premessa per chi ha tempo di pensare Questo non √® un post da scrollare tra una notifica e l&amp;rsquo;altra.&#xA;√à un testo lungo, denso, costruito per chi ha voglia di fermarsi e mettere in discussione alcune certezze che ci portiamo dietro sull&amp;rsquo;imprenditorialit√†. Non troverai motivazione da LinkedIn n√© liste di &amp;ldquo;5 step per scalare il tuo business&amp;rdquo;. Troverai invece una critica ragionata al modo in cui abbiamo trasformato la figura dell&amp;rsquo;imprenditore: da qualcuno che estrae valore dal lavoro altrui a una sorta di mago moderno che trasforma problemi in &amp;ldquo;macchine da soldi&amp;rdquo;.</description>
    </item>
    <item>
      <title>WordArt, l&#39;informatica e l&#39;arte del riuso</title>
      <link>https://hardcode.blog/posts/20250923-banner-mania/</link>
      <pubDate>Tue, 23 Sep 2025 16:12:31 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250923-banner-mania/</guid>
      <description>Introduzione Nel 1989, un piccolo programma per MS-DOS chiamato BannerMania fece la sua comparsa nel panorama informatico. Sviluppato da Presage Software Development per Pixellite Group e distribuito da Broderbund, questo software permetteva agli utenti di creare banner, poster, cartelli e loghi con una variet√† di font ed effetti grafici. Era un&amp;rsquo;epoca in cui l&amp;rsquo;informatica non era solo uno strumento, ma un mezzo per esprimere la propria creativit√†.&#xA;Ricordo con affetto le ore trascorse davanti al mio 386, creando scritte colorate e stilizzate, salvando i miei progetti come se fossero opere d&amp;rsquo;arte digitali.</description>
    </item>
    <item>
      <title>Kubernetes 2.0 uccide YAML? Una riflessione su strumenti, obsolescenza e modernizzazione</title>
      <link>https://hardcode.blog/posts/devops/20250808-kube-20-la-rinascita/</link>
      <pubDate>Fri, 08 Aug 2025 10:16:22 +0000</pubDate>
      <guid>https://hardcode.blog/posts/devops/20250808-kube-20-la-rinascita/</guid>
      <description>TL;DR - La bottom line prima di tutto Non esiste alcun Kubernetes 2.0 ufficiale che elimina YAML, ma il dibattito √® pi√π che mai attuale. Con il 79% dei problemi di produzione di Kubernetes tracciabili a errori di configurazione YAML, la community sta attivamente esplorando alternative pi√π robuste. La vera domanda non √® se buttare via YAML, ma come evolverlo intelligentemente.&#xA;Il (falso) annuncio che fa scalpore Negli ultimi mesi, diversi articoli online hanno fatto circolare l&amp;rsquo;idea di un &amp;ldquo;Kubernetes 2.</description>
    </item>
    <item>
      <title>Docker 2026: L&#39;Evoluzione che Ridefinir√† il DevOps</title>
      <link>https://hardcode.blog/posts/docker/20250805-docker-2026-nuova-era/</link>
      <pubDate>Tue, 05 Aug 2025 16:46:37 +0000</pubDate>
      <guid>https://hardcode.blog/posts/docker/20250805-docker-2026-nuova-era/</guid>
      <description>Analisi completa dei trend, previsioni e strategie per il futuro della containerizzazione&#xA;Executive Summary: Il Futuro √® Gi√† Qui Bottom Line Up Front: Docker nel 2026 non sar√† pi√π &amp;ldquo;solo&amp;rdquo; una tecnologia di containerizzazione, ma evolver√† in una piattaforma integrata di sviluppo AI-driven, con focus su edge computing, serverless containers e automazione intelligente. Le organizzazioni che si preparano oggi a questa transizione avranno un vantaggio competitivo decisivo.&#xA;Mentre la containerizzazione si avvia al suo secondo decennio di vita, Docker si trova a un punto di flesso cruciale.</description>
    </item>
    <item>
      <title>Tutti i problemi sono (gi√†) risolti: come creare prodotti strategici che la gente vuole davvero provare</title>
      <link>https://hardcode.blog/posts/20250730-10-idee-per-migliorare-il-tuo-progetto/</link>
      <pubDate>Wed, 30 Jul 2025 09:07:10 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250730-10-idee-per-migliorare-il-tuo-progetto/</guid>
      <description>Spesso, quando si parla di idee e progetti per startup, si sente ripetere un consiglio apparentemente semplice: ‚Äútrova un problema da risolvere‚Äù. Ma questa √® una frase ingenua.&#xA;Il mondo del business non √® una collezione di problemi irrisolti in attesa del loro eroe. Tutti i settori ‚Äî dalla logistica all‚Äôistruzione, dalla finanza all‚Äôe-commerce ‚Äî esistono e funzionano perch√© i problemi sono gi√† stati risolti, magari in modo imperfetto, magari con inefficienze.</description>
    </item>
    <item>
      <title>PHP cambia licenza: cosa significa davvero e perch√© √® una buona notizia</title>
      <link>https://hardcode.blog/posts/php/20250722-php-9-license/</link>
      <pubDate>Tue, 22 Jul 2025 13:17:59 +0000</pubDate>
      <guid>https://hardcode.blog/posts/php/20250722-php-9-license/</guid>
      <description>Il progetto PHP sta per fare un passo storico: dire addio alla sua licenza attuale ‚Äì la PHP License e la Zend Engine License ‚Äì per abbracciare una delle licenze open-source pi√π consolidate e compatibili: la Modified BSD License.&#xA;Il cambiamento, ancora in fase di RFC (Request for Comments), √® previsto con PHP 9.0, e rappresenta una semplificazione tanto attesa per tutta la community.&#xA;Perch√© cambiare la licenza? Chi ha lavorato abbastanza con PHP sa che la PHP License, pur approvata dall&amp;rsquo;OSI (ma solo in via retroattiva), √® sempre stata una creatura un po‚Äô atipica.</description>
    </item>
    <item>
      <title>Sudo, exploit e privilegio: perch√© serve pi√π Bash e meno binari</title>
      <link>https://hardcode.blog/posts/20250715-sudo-exploit/</link>
      <pubDate>Tue, 15 Jul 2025 08:31:09 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250715-sudo-exploit/</guid>
      <description>Due vulnerabilit√† gravi scoperte nel 2025 nel celebre tool sudo ‚Äî CVE-2025-32462 e CVE-2025-32463 ‚Äî ci obbligano a riflettere su un punto cruciale e spesso trascurato: serve davvero un binario setuid root per qualcosa che dovrebbe essere solo una scorciatoia da terminale?&#xA;Cos‚Äô√® successo: due falle, root per tutti Nel giugno 2025, sudo √® stato aggiornato alla versione 1.9.17p1 per correggere due bug:&#xA;CVE-2025-32462: bastava usare l‚Äôopzione -h in modo improprio per ingannare il controllo di policy e ottenere accesso root anche su host non autorizzati.</description>
    </item>
    <item>
      <title>La Nuova API OSI per le Licenze Open Source: Una Guida Completa per Sviluppatori</title>
      <link>https://hardcode.blog/posts/20250624-la-nuova-api-per-le-licenze-opensource/</link>
      <pubDate>Tue, 24 Jun 2025 08:49:04 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250624-la-nuova-api-per-le-licenze-opensource/</guid>
      <description>L&amp;rsquo;Open Source Initiative (OSI) ha recentemente lanciato una nuova API che rivoluziona il modo in cui accediamo e gestiamo le informazioni sulle licenze open source approvate. Questa innovazione rappresenta un passo significativo verso la modernizzazione degli strumenti disponibili per la comunit√† di sviluppatori, team legali e aziende che lavorano quotidianamente con il software open source.&#xA;Cos&amp;rsquo;√® la Nuova API OSI La nuova API fornisce accesso programmatico alla lista canonica delle OSI Approved Licenses¬Æ, offrendo un servizio completamente pubblico e gratuito che serve come fonte di verit√† ufficiale per i dati delle licenze OSI.</description>
    </item>
    <item>
      <title>Questo post √® un menu!!!</title>
      <link>https://hardcode.blog/posts/20250527-questo-post-e-un-menu/</link>
      <pubDate>Tue, 27 May 2025 01:06:14 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250527-questo-post-e-un-menu/</guid>
      <description>Benvenuto nel post che&amp;hellip; non √® un post. √à una console di comando, una sala di controllo, un hub centrale.&#xA;Qui sotto trovi una checklist di esperienze interattive: ogni link ti porta a un post che non si legge soltanto ‚Äî si vive, si tocca, si hackera.&#xA;Spunta quelli che hai gi√† esplorato. Scopri quelli che ti mancano. Condividili con chi ama imparare giocando.&#xA;‚úÖ La checklist degli esperimenti interattivi üïπÔ∏è Questo post √® un Game Boy Gioca direttamente nel post a un mini-videogioco stile retro.</description>
    </item>
    <item>
      <title>ROI nell‚ÄôIngegneria Informatica: Perch√© √® Cruciale per Ogni Progetto Tecnologico</title>
      <link>https://hardcode.blog/posts/20250519-roi-per-ingegneri/</link>
      <pubDate>Mon, 19 May 2025 14:03:38 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250519-roi-per-ingegneri/</guid>
      <description>Quando si parla di Return on Investment (ROI), molti pensano subito a numeri da bilancio, strategie di marketing o grandi investimenti aziendali. Ma il ROI √® molto di pi√π: √® uno strumento essenziale anche per chi lavora nel campo dell‚Äôingegneria informatica, sia in ambito aziendale che freelance.&#xA;In questo articolo vedremo cos&amp;rsquo;√® il ROI, perch√© √® fondamentale nell‚ÄôIT e come possiamo utilizzarlo per migliorare i risultati dei nostri progetti tecnologici.</description>
    </item>
    <item>
      <title>Perch√© Mush √® sulla strada giusta: la risposta illuminante</title>
      <link>https://hardcode.blog/posts/20250512-mush-contro-rust/</link>
      <pubDate>Mon, 12 May 2025 16:56:11 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250512-mush-contro-rust/</guid>
      <description>Qualche giorno fa ho avuto il piacere di scambiare due parole con uno sviluppatore open source molto attivo nella community di Rust. Avevo in mente un‚Äôidea ben precisa: cercare conferme su alcuni principi che mi guidano nello sviluppo di Mush, lo strumento che vuole portare la developer experience di Rust nel mondo dei progetti shell.&#xA;Gli ho fatto una domanda semplice, ma carica di aspettative: &amp;ldquo;Dal tuo punto di vista, quali sono tre motivi per preferire Rust per il mio prossimo progetto?</description>
    </item>
    <item>
      <title>Docker: l‚Äôinizio della fine di un‚Äôicona?</title>
      <link>https://hardcode.blog/posts/devops/20250507-la-fine-di-docker/</link>
      <pubDate>Wed, 07 May 2025 23:17:10 +0000</pubDate>
      <guid>https://hardcode.blog/posts/devops/20250507-la-fine-di-docker/</guid>
      <description>Docker √® stato, senza mezzi termini, una rivoluzione. Un cambio di paradigma nel modo in cui pensiamo, costruiamo e distribuiamo software. Un layer trasparente tra sviluppatori e infrastruttura, capace di creare una nuova normalit√†: build leggere, ambienti replicabili, deployment semplificati. Docker √® stato molto pi√π di una tecnologia: √® stato un movimento.&#xA;Ma i movimenti, come le mode, tendono a cristallizzarsi. E quando una tecnologia da &amp;ldquo;motore del cambiamento&amp;rdquo; diventa solo &amp;ldquo;un motore di esecuzione&amp;rdquo; ‚Äì un runtime engine, per capirci ‚Äì allora entra in un‚Äôarena diversa.</description>
    </item>
    <item>
      <title>Come Parlano i Computer Quantistici: Il Linguaggio Dietro le Macchine del Futuro</title>
      <link>https://hardcode.blog/posts/20250220-come-parlano-i-computer-quantistici/</link>
      <pubDate>Thu, 20 Feb 2025 17:05:17 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250220-come-parlano-i-computer-quantistici/</guid>
      <description>I computer quantistici, a differenza dei classici, non seguono il semplice schema binario di 0 e 1. Essi sfruttano le leggi della fisica quantistica per trattare informazioni in modi radicalmente diversi. Ma come parlano, questi computer? Qual √® il linguaggio che usano per eseguire calcoli e per &amp;ldquo;capire&amp;rdquo; le istruzioni che gli vengono date? In questo post, esploreremo il linguaggio dei computer quantistici, il suo potenziale, e come potrebbe evolversi per diventare pi√π intuitivo e vicino alla logica che usiamo ogni giorno.</description>
    </item>
    <item>
      <title>Key Promoter X: Il Plugin Che Ti Insegna le Shortcut (Volente o Nolente)</title>
      <link>https://hardcode.blog/posts/20250212-key-promoter-x/</link>
      <pubDate>Wed, 12 Feb 2025 17:59:53 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20250212-key-promoter-x/</guid>
      <description>Oggi voglio parlare di un piccolo gioiello nascosto tra i plugin di WebStorm: Key Promoter X. Se non lo conosci, preparati a ricevere una valanga di notifiche mentre lavori. Questo plugin ha una missione molto chiara: insegnarti a usare le scorciatoie da tastiera. Ogni volta che clicchi con il mouse su un‚Äôazione per la quale esiste una scorciatoia, Key Promoter X te lo fa notare con un bel pop-up, quasi a dirti: &amp;ldquo;Ehi, lo sai che stai perdendo tempo?</description>
    </item>
    <item>
      <title>Come Usare NoMachine su una Macchina Ubuntu in Modalit√† Headless</title>
      <link>https://hardcode.blog/posts/20241115-nomachine-ubuntu-headless/</link>
      <pubDate>Fri, 15 Nov 2024 10:50:20 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20241115-nomachine-ubuntu-headless/</guid>
      <description>NoMachine √® uno strumento potente per accedere in remoto a un desktop Linux. In modalit√† headless (senza monitor fisico collegato), potrebbe essere necessario configurare alcune opzioni per garantire che NoMachine funzioni correttamente e mostri un desktop remoto utilizzabile. In questa guida, vedremo come configurare NoMachine su una macchina Ubuntu senza monitor fisico collegato.&#xA;1. Installare NoMachine su Ubuntu Scarica NoMachine dal sito ufficiale. Scegli la versione per Linux (deb package per distribuzioni basate su Debian come Ubuntu).</description>
    </item>
    <item>
      <title>Good Times: La Canzone di Edie Brickell che Ha Fatto la Storia di Windows 98</title>
      <link>https://hardcode.blog/posts/20241112-windows-98-nostalgia/</link>
      <pubDate>Tue, 12 Nov 2024 09:41:10 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20241112-windows-98-nostalgia/</guid>
      <description>Quando pensiamo a Windows 98, ci vengono in mente immagini nostalgiche: schermi CRT, icone semplici, il suono inconfondibile dell‚Äôavvio. Ma tra i ricordi pi√π curiosi c‚Äô√® una piccola gemma musicale: Good Times di Edie Brickell, una traccia che molti utenti scoprirono per caso tra i file di sistema, e che ha finito per diventare la colonna sonora di un‚Äôepoca.&#xA;La Storia di una Canzone in un Sistema Operativo Negli anni ‚Äô90, Microsoft era pi√π che un‚Äôazienda tecnologica; era una porta d‚Äôaccesso per milioni di persone alla nuova era digitale.</description>
    </item>
    <item>
      <title>Le metriche DORA: La chiave per misurare e migliorare le prestazioni DevOps</title>
      <link>https://hardcode.blog/posts/devops/20241005-dora-metrics/</link>
      <pubDate>Sat, 05 Oct 2024 08:13:47 +0000</pubDate>
      <guid>https://hardcode.blog/posts/devops/20241005-dora-metrics/</guid>
      <description>Nell&amp;rsquo;ambito dell&amp;rsquo;ingegneria del software e del DevOps, la misurazione delle prestazioni √® fondamentale per il miglioramento continuo. Le metriche DORA (DevOps Research and Assessment) sono emerse come uno standard de facto per valutare l&amp;rsquo;efficacia delle pratiche DevOps. In questo articolo, esploreremo cosa sono le metriche DORA, perch√© sono importanti e come possono essere utilizzate per ottimizzare i processi di sviluppo software.&#xA;Cosa sono le metriche DORA? Le metriche DORA sono un insieme di quattro indicatori chiave di prestazione (KPI) sviluppati dal team di ricerca DevOps di Google.</description>
    </item>
    <item>
      <title>Il Circuit Breaker: Il Pattern che ha Salvato Netflix</title>
      <link>https://hardcode.blog/posts/pattern/20240917-circuit-breaker/</link>
      <pubDate>Tue, 17 Sep 2024 15:03:43 +0000</pubDate>
      <guid>https://hardcode.blog/posts/pattern/20240917-circuit-breaker/</guid>
      <description>Nell&amp;rsquo;ingegneria del software, la resilienza dei sistemi √® fondamentale, soprattutto quando si tratta di servizi ad alta disponibilit√†. Oggi esploreremo un pattern di progettazione che ha rivoluzionato la gestione del carico in sistemi distribuiti: il Circuit Breaker.&#xA;La Storia di un Quasi Disastro Immaginate la scena: un importante servizio di streaming (che chiameremo &amp;ldquo;StreamFlix&amp;rdquo;) si prepara al lancio di una nuova serie TV attesissima. L&amp;rsquo;hype √® alle stelle, i fan sono pronti a premere play&amp;hellip; ma c&amp;rsquo;√® un problema.</description>
    </item>
    <item>
      <title>L&#39;Evoluzione dell&#39;Architettura Software: Dal Monolitico ai Microservizi e Oltre</title>
      <link>https://hardcode.blog/posts/20240911-dal-monolitico-ai-microservizi-e-oltre/</link>
      <pubDate>Wed, 11 Sep 2024 15:55:04 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20240911-dal-monolitico-ai-microservizi-e-oltre/</guid>
      <description>Prefazione Caro lettore,&#xA;Benvenuto in questo viaggio attraverso l&amp;rsquo;evoluzione dell&amp;rsquo;architettura software. Questo post √® strutturato per soddisfare le esigenze sia dei neofiti che degli esperti nel campo dell&amp;rsquo;ingegneria del software.&#xA;Se hai gi√† familiarit√† e padronanza con i microservizi, ti suggeriamo di saltare direttamente alla Parte II, che inizia dalla sezione &amp;ldquo;Architetture Serverless&amp;rdquo;. Qui troverai approfondimenti sulle tendenze pi√π recenti, best practices avanzate e riflessioni sul futuro dell&amp;rsquo;architettura software.&#xA;Se invece sei nuovo in questo campo o desideri rinfrescare le tue conoscenze sulle basi, ti invitiamo a iniziare dalla Parte I.</description>
    </item>
    <item>
      <title>Mindset Consulente 2.0: La Teoria Triangolare della Consulenza Moderna</title>
      <link>https://hardcode.blog/posts/20240908-mindset-consulente-due-punto-zero/</link>
      <pubDate>Sun, 08 Sep 2024 13:43:41 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20240908-mindset-consulente-due-punto-zero/</guid>
      <description>Nell&amp;rsquo;era dell&amp;rsquo;informazione, il ruolo del consulente ha subito una trasformazione radicale. Non si tratta pi√π solo di fornire soluzioni standardizzate ai problemi dei clienti, ma di operare in un contesto dinamico, flessibile e in continua evoluzione. √à in questo scenario che nasce il Mindset Consulente 2.0, una teoria che poggia su tre pilastri fondamentali: Creativit√†, Flessibilit√† e Trasparenza.&#xA;Questa visione non √® limitata ai professionisti del settore IT o del digitale, ma pu√≤ essere applicata in settori apparentemente distanti come l&amp;rsquo;architettura, il diritto, la consulenza aziendale e molte altre professioni.</description>
    </item>
    <item>
      <title>**Docker** su Windows: Un errore colossale</title>
      <link>https://hardcode.blog/posts/docker/20210401-tools-for-windows-docker-developer/</link>
      <pubDate>Fri, 30 Aug 2024 12:45:00 +0200</pubDate>
      <guid>https://hardcode.blog/posts/docker/20210401-tools-for-windows-docker-developer/</guid>
      <description>In un&amp;rsquo;era in cui l&amp;rsquo;efficienza e la velocit√† sono cruciali nello sviluppo software, Docker si √® affermato come uno strumento indispensabile. Tuttavia, quando si tratta di Docker Desktop e Docker per Windows, ci troviamo di fronte a quello che posso solo definire un errore colossale. Lasciate che vi spieghi perch√©.&#xA;üåê Ti piacciono questi temi? Aiutaci a migliorare e a raggiungere pi√π persone! Se trovi utile questo articolo, condividilo con i tuoi amici e colleghi sui social.</description>
    </item>
    <item>
      <title>Docker e Shell: Strumenti per Potenziare il Tuo Ambiente di Sviluppo</title>
      <link>https://hardcode.blog/posts/shell/20210401-tools-for-shell-developer/</link>
      <pubDate>Fri, 16 Aug 2024 16:50:00 +0200</pubDate>
      <guid>https://hardcode.blog/posts/shell/20210401-tools-for-shell-developer/</guid>
      <description>Nel mondo dello sviluppo software moderno, Docker e i container hanno rivoluzionato il modo in cui creiamo, distribuiamo e gestiamo le applicazioni. Ma il loro impatto non si limita solo alle applicazioni: anche l&amp;rsquo;ambiente di sviluppo stesso pu√≤ beneficiare enormemente dall&amp;rsquo;uso dei container. In questo post, esploreremo alcuni strumenti shell che sfruttano la potenza di Docker e dei container per migliorare il flusso di lavoro degli sviluppatori.&#xA;üåê Ti piacciono questi temi?</description>
    </item>
    <item>
      <title>Le **blockchain** sono morte!?</title>
      <link>https://hardcode.blog/posts/rant/20200101-blockchain-is-dead/</link>
      <pubDate>Mon, 05 Aug 2024 18:31:08 +0200</pubDate>
      <guid>https://hardcode.blog/posts/rant/20200101-blockchain-is-dead/</guid>
      <description>La Svizzera e la Blockchain: Un Esempio di Innovazione o un Errore Costoso? Da tempo, si era diffusa la notizia che la Svizzera stesse adottando la blockchain per i pagamenti fiscali. Tuttavia, un&amp;rsquo;analisi pi√π approfondita rivela una realt√† pi√π complessa e solleva dubbi sull&amp;rsquo;effettiva utilit√† e sostenibilit√† di questa tecnologia nel lungo termine.&#xA;La Realt√† dei Fatti Contrariamente a quanto inizialmente riportato, la Svizzera non ha implementato un sistema blockchain a livello nazionale per i pagamenti fiscali.</description>
    </item>
    <item>
      <title>Scopriamo **Zig**: un tutorial facile facile in 10 lezioni</title>
      <link>https://hardcode.blog/posts/tutorial/20240717-impariamo-zig/</link>
      <pubDate>Wed, 17 Jul 2024 18:00:49 +0000</pubDate>
      <guid>https://hardcode.blog/posts/tutorial/20240717-impariamo-zig/</guid>
      <description>Benvenuti al nostro tutorial su Zig, un linguaggio di programmazione moderno e performante che sta guadagnando sempre pi√π popolarit√† tra gli sviluppatori. Zig √® noto per la sua semplicit√†, efficienza e robustezza, rendendolo ideale per progetti di sistema e applicazioni ad alte prestazioni. In questo percorso in 10 sezioni, esploreremo i concetti fondamentali di Zig attraverso esempi pratici che potrai eseguire direttamente nell&amp;rsquo;articolo. Pronto a iniziare? Andiamo!&#xA;üåê Ti piacciono questi temi?</description>
    </item>
    <item>
      <title>**Substack**: lo strumento per diventare l&#39;esperto che parla agli esperti</title>
      <link>https://hardcode.blog/posts/20240713-substack/</link>
      <pubDate>Sat, 13 Jul 2024 05:53:30 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20240713-substack/</guid>
      <description>Sei un consulente o un professionista che desidera costruire la propria popolarit√† e raggiungere un pubblico di esperti nel tuo settore? Substack potrebbe essere lo strumento che fa per te.&#xA;üåê Ti piacciono questi temi? Aiutaci a migliorare e a raggiungere pi√π persone! Se trovi utile questo articolo, condividilo con i tuoi amici e colleghi sui social. La tua condivisione ci aiuta a crescere e a portare contenuti di qualit√† a un pubblico sempre pi√π ampio.</description>
    </item>
    <item>
      <title>Chi √® **Kent Beck**? Non solo **XP**, ma tanto altro e cosa ci insegna</title>
      <link>https://hardcode.blog/posts/people/20240712-chi-e-kent-beck/</link>
      <pubDate>Fri, 12 Jul 2024 12:55:22 +0000</pubDate>
      <guid>https://hardcode.blog/posts/people/20240712-chi-e-kent-beck/</guid>
      <description>Kent Beck √® una figura leggendaria nel mondo dello sviluppo software, celebre per aver introdotto concetti rivoluzionari come eXtreme Programming (XP) e Test-Driven Development (TDD). La sua carriera non si limita per√≤ a questi successi; √® un esempio di come l&amp;rsquo;innovazione tecnica possa fondersi con una profonda riflessione sulla vita e sull&amp;rsquo;umanit√†.&#xA;Iniziando dalla sua influenza nel campo dell&amp;rsquo;ingegneria del software, Beck √® stato il pioniere nell&amp;rsquo;isolare i pattern ripetitivi nei problemi e nelle soluzioni, permettendo di concentrare l&amp;rsquo;attenzione sugli aspetti unici di ogni sfida.</description>
    </item>
    <item>
      <title>Esplorando la **Developer Experience**: fondamenti e implicazioni</title>
      <link>https://hardcode.blog/posts/dx/20240711-developer-experience-fondamenti-e-implicazioni/</link>
      <pubDate>Thu, 11 Jul 2024 14:16:29 +0000</pubDate>
      <guid>https://hardcode.blog/posts/dx/20240711-developer-experience-fondamenti-e-implicazioni/</guid>
      <description>Nel vasto panorama dello sviluppo software, la Developer Experience (DevEx) emerge come un elemento cruciale ma spesso sottovalutato. Essenzialmente, si tratta dell&amp;rsquo;insieme di percezioni e interazioni che gli sviluppatori vivono durante il processo di creazione e manutenzione del software. Va oltre l&amp;rsquo;interfaccia utente o l&amp;rsquo;efficienza degli strumenti; riflette anche la qualit√† dell&amp;rsquo;ambiente di lavoro, la facilit√† di utilizzo delle tecnologie, e la fluidit√† dei flussi di lavoro.&#xA;üåê Ti piacciono questi temi?</description>
    </item>
    <item>
      <title>**One Thing**: una soluzione per aumentare la produttivit√† su macOS e Gnome</title>
      <link>https://hardcode.blog/posts/tool/20240709-one-thing-per-la-produttivita/</link>
      <pubDate>Tue, 09 Jul 2024 10:33:00 +0000</pubDate>
      <guid>https://hardcode.blog/posts/tool/20240709-one-thing-per-la-produttivita/</guid>
      <description>One Thing √® nato dalla mia ricerca di maggiore produttivit√† e focus, con un approccio centrato sulla gestione delle attivit√† attraverso la riga di comando. Questo strumento innovativo √® costruito principalmente su shell script, offrendo un modo semplice e potente per gestire le tue attivit√† quotidiane.&#xA;Perch√© &amp;ldquo;One Thing&amp;rdquo;? Sviluppato inizialmente per evitare il multitasking distruttivo, &amp;ldquo;One Thing&amp;rdquo; ti consente di concentrarti su una singola attivit√† alla volta, migliorando la qualit√† del tuo lavoro.</description>
    </item>
    <item>
      <title>Tutti gli informatici hanno un sogno nel cassetto: _scrivere un libro!!1!_</title>
      <link>https://hardcode.blog/posts/20240628-scrivere-un-libro-di-informatica/</link>
      <pubDate>Fri, 28 Jun 2024 12:54:35 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20240628-scrivere-un-libro-di-informatica/</guid>
      <description>Ogni informatico, nel profondo, coltiva il sogno di scrivere un libro. Questo desiderio potrebbe nascere dal vedere la propria idea prendere forma concreta, un parallelo con il successo delle proprie idee. Immaginare di tenere in mano un libro con il proprio nome sulla copertina rappresenta una sorta di traguardo inconscio, una rivincita dopo anni passati a leggere i libri degli altri. Ora, grazie a piattaforme come Reedsy, questo sogno √® pi√π accessibile che mai.</description>
    </item>
    <item>
      <title>Potenza e responsabilit√†, l&#39;uso di `call_user_func_array` in php</title>
      <link>https://hardcode.blog/posts/php/20240621-chiamata-indiretta-di-una-funzione/</link>
      <pubDate>Fri, 21 Jun 2024 12:17:31 +0200</pubDate>
      <guid>https://hardcode.blog/posts/php/20240621-chiamata-indiretta-di-una-funzione/</guid>
      <description>Nel vasto mondo di PHP, la funzione call_user_func_array √® una delle pi√π potenti e versatili a disposizione degli sviluppatori. Permette di chiamare una funzione in modo dinamico, passando i parametri come array. Questo articolo esplora come utilizzare questa funzione, presenta esempi pratici e analizza le implicazioni filosofiche dell&amp;rsquo;uso di chiamate di funzione indiretta.&#xA;üåê Ti piacciono questi temi? Aiutaci a migliorare e a raggiungere pi√π persone! Se trovi utile questo articolo, condividilo con i tuoi amici e colleghi sui social.</description>
    </item>
    <item>
      <title>Il pericolo del **gold plating**: quando le troppe funzionalit√† portano al fallimento</title>
      <link>https://hardcode.blog/posts/agile/20240620-gold-plating/</link>
      <pubDate>Thu, 20 Jun 2024 16:08:23 +0000</pubDate>
      <guid>https://hardcode.blog/posts/agile/20240620-gold-plating/</guid>
      <description>Nel mondo della gestione dei progetti e dello sviluppo software, il termine &amp;ldquo;gold plating&amp;rdquo; si riferisce all&amp;rsquo;aggiunta di funzionalit√† o caratteristiche non richieste ai prodotti. Sebbene possa sembrare un&amp;rsquo;ottima idea arricchire un prodotto con funzioni aggiuntive, questa pratica pu√≤ portare a una serie di problemi significativi, tra cui sforamento dei tempi e dei costi, complicazioni tecniche e insoddisfazione degli utenti. Una metafora interessante per comprendere il concetto √® quella dello zucchero in una bevanda: un po&amp;rsquo; di zucchero pu√≤ migliorare il sapore, ma troppo pu√≤ renderla imbevibile.</description>
    </item>
    <item>
      <title>Riflessione sul futuro del software: Lezioni dalla storia dei media</title>
      <link>https://hardcode.blog/posts/20240613-riflessione-sul-futuro-del-software/</link>
      <pubDate>Thu, 13 Jun 2024 16:37:36 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20240613-riflessione-sul-futuro-del-software/</guid>
      <description>Attenzione: Le riflessioni che seguono sono tratte dal lavoro di Chris Paik&#xA;Per comprendere come cambier√† il software, possiamo trarre beneficio dallo studio di come la tecnologia ha trasformato altre industrie. La storia tende a ripetersi, se si presta attenzione.&#xA;La rivoluzione dei media Prima dell&amp;rsquo;avvento di Internet, il settore dei media era molto diverso. Creare contenuti era un&amp;rsquo;impresa costosa: si doveva pagare persone per produrre, modificare e distribuire materiale.</description>
    </item>
    <item>
      <title>Ingegneria del Software, la storia del portale InfoQ</title>
      <link>https://hardcode.blog/posts/20240606-la-storia-di-infoq/</link>
      <pubDate>Thu, 06 Jun 2024 17:02:03 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20240606-la-storia-di-infoq/</guid>
      <description>Se sei un professionista dell&amp;rsquo;informatica o un appassionato di tecnologia, probabilmente hai gi√† sentito parlare di InfoQ.com. Ma cosa rende questo portale cos√¨ speciale? Scopri la sua storia, gli scoop pi√π rilevanti che lo hanno portato alla ribalta e perch√© dovresti considerarlo un punto di riferimento per la cultura dell&amp;rsquo;ingegneria del software.&#xA;La storia di InfoQ.com InfoQ √® stato lanciato nel 2006 con l&amp;rsquo;obiettivo di fornire contenuti di alta qualit√† su sviluppo software, architettura, metodologia e tecnologie emergenti.</description>
    </item>
    <item>
      <title>I perfetto setup per ubuntu, riflessioni e segreti</title>
      <link>https://hardcode.blog/posts/20240201-il-perfetto-setup-ubuntu/</link>
      <pubDate>Thu, 01 Feb 2024 02:13:32 +0200</pubDate>
      <guid>https://hardcode.blog/posts/20240201-il-perfetto-setup-ubuntu/</guid>
      <description>Oggi voglio condividere con voi un traguardo speciale: sono ormai un utente Ubuntu da 10 anni! In questo decennio, ho esplorato e sperimentato con innumerevoli configurazioni e strumenti per ottimizzare la mia esperienza con questo fantastico sistema operativo. Oggi voglio svelare alcune delle mie fonti preferite per trovare le migliori configurazioni e darvi qualche consiglio utile per un&amp;rsquo;esperienza Ubuntu senza intoppi.&#xA;I migliori consigli per il setup di Ubuntu Flameshot - Flameshot √® uno strumento di cattura dello schermo potente e personalizzabile che ha semplificato enormemente il mio lavoro quotidiano.</description>
    </item>
    <item>
      <title>Prima trovate un coach, poi trovate la motivazione</title>
      <link>https://hardcode.blog/posts/motivazione/20220908-il-primo-passo/</link>
      <pubDate>Thu, 08 Sep 2022 02:13:32 +0200</pubDate>
      <guid>https://hardcode.blog/posts/motivazione/20220908-il-primo-passo/</guid>
      <description>La motivazione √® il primo passo verso il cambiamento. Spesso, per√≤, ci troviamo bloccati, incapaci di intraprendere il percorso che desideriamo. Dopo una stimolante chiacchierata con un coach professionista, ho compreso l&amp;rsquo;importanza di avere una guida per affrontare le sfide e raggiungere i nostri obiettivi. √à in questo contesto che ho deciso di stilare una lista di 10 argomenti che potrei approfondire per migliorare me stesso. Ho trovato una fonte preziosa in una serie di video del dottor Filippo Ongaro, che consiglio vivamente di ascoltare.</description>
    </item>
    <item>
      <title>Anche se molto utile, odio le property shorthand</title>
      <link>https://hardcode.blog/posts/rant/20210112-javascript-shorthand-property-names/</link>
      <pubDate>Mon, 11 Oct 2021 02:13:32 +0200</pubDate>
      <guid>https://hardcode.blog/posts/rant/20210112-javascript-shorthand-property-names/</guid>
      <description>La Property Shorthand in JavaScript √® spesso acclamata per la sua sintassi concisa e intuitiva nella definizione degli oggetti. Tuttavia, dietro questa apparente comodit√† si nascondono alcune criticit√† che potrebbero compromettere la chiarezza e la manutenibilit√† del codice.&#xA;üåê Ti piacciono questi temi? Aiutaci a migliorare e a raggiungere pi√π persone! Se trovi utile questo articolo, condividilo con i tuoi amici e colleghi sui social. La tua condivisione ci aiuta a crescere e a portare contenuti di qualit√† a un pubblico sempre pi√π ampio.</description>
    </item>
    <item>
      <title>Recensione: L&#39;arte della pazienza - Raffaele Gaito</title>
      <link>https://hardcode.blog/posts/motivazione/20210720-letture-efficaci/</link>
      <pubDate>Tue, 20 Jul 2021 12:10:00 +0200</pubDate>
      <guid>https://hardcode.blog/posts/motivazione/20210720-letture-efficaci/</guid>
      <description>Ho avuto il piacere di leggere L&amp;rsquo;arte della pazienza di Raffaele Gaito per la prima volta il 17 luglio 2021, e da quel giorno, questo libro √® diventato un compagno costante nel mio percorso di crescita personale e professionale. La capacit√† di Gaito di trattare un tema cos√¨ essenziale come la pazienza, con una prosa chiara e coinvolgente, √® ci√≤ che rende questa opera tanto preziosa.&#xA;In un&amp;rsquo;epoca in cui il tempo sembra scorrere pi√π velocemente e le nostre vite sono dominate dalla fretta, L&amp;rsquo;arte della pazienza ci invita a riflettere sull&amp;rsquo;importanza di rallentare e di affrontare le sfide con calma e lucidit√†.</description>
    </item>
    <item>
      <title>L&#39;Agile √® Morto!!!</title>
      <link>https://hardcode.blog/posts/agile/20200928-agile-is-dead/</link>
      <pubDate>Mon, 05 Apr 2021 13:19:26 +0200</pubDate>
      <guid>https://hardcode.blog/posts/agile/20200928-agile-is-dead/</guid>
      <description>Intro Il titolo potrebbe sembrare eccessivamente drammatico‚Äîforse addirittura un po&amp;rsquo; clickbait‚Äîma c&amp;rsquo;√® sostanza dietro di esso. Oggi, quando parliamo di Agile, tutti vogliono dire la loro, ansiosi di applicare i propri metodi, ognuno con innumerevoli variazioni tratte dall‚Äôesperienza personale. Questo mi porta a porre alcune domande fondamentali:&#xA;Cosa Mi Manca Pu√≤ una metodologia determinare il successo o il fallimento, o √® semplicemente responsabile di risorse sprecate? Perch√© i concetti fondamentali di Agile non sono riconosciuti come schemi che possono essere incorporati in altre metodologie?</description>
    </item>
    <item>
      <title>Che cos&#39;√® Vtiger?</title>
      <link>https://hardcode.blog/posts/vtiger/20221212-cose-vtiger/</link>
      <pubDate>Fri, 18 Sep 2020 12:13:35 +0530</pubDate>
      <guid>https://hardcode.blog/posts/vtiger/20221212-cose-vtiger/</guid>
      <description>Vtiger √® un software di gestione dei clienti (CRM) progettato per aiutare le aziende a gestire le interazioni con i clienti, a gestire le opportunit√† di vendita e a sviluppare relazioni con i clienti. Molti utenti lo trovano utile per la sua capacit√† di integrazione con altre soluzioni aziendali, come le piattaforme di email e di marketing, e per la sua facile personalizzazione. Tuttavia, come qualsiasi altro software, Vtiger pu√≤ avere alcune limitazioni o problemi che potrebbero non essere adatti a tutte le aziende.</description>
    </item>
    <item>
      <title>Modernizzare Vtiger: Un Appello all&#39;Evoluzione nei Progetti Open Source Legacy</title>
      <link>https://hardcode.blog/posts/vtiger/20200918-modernize-vtiger/</link>
      <pubDate>Fri, 18 Sep 2020 12:13:35 +0530</pubDate>
      <guid>https://hardcode.blog/posts/vtiger/20200918-modernize-vtiger/</guid>
      <description>Quando un software continua a offrire valore nonostante il passare degli anni, si dice che &amp;ldquo;invecchi bene&amp;rdquo;. Vtiger, una piattaforma CRM di lunga data, √® uno di questi esempi. Le sue funzionalit√† robuste e la vasta adozione hanno aiutato innumerevoli aziende a organizzarsi e crescere. Tuttavia, in un&amp;rsquo;era in cui automazione, agilit√† e miglioramento continuo sono il cuore pulsante dello sviluppo moderno, anche software come Vtiger devono evolversi per rimanere rilevanti.</description>
    </item>
    <item>
      <title>A.I. cosa ci dobbiamo aspettare? Le frontiere dell&#39;AI</title>
      <link>https://hardcode.blog/posts/ai/20200912-ai/</link>
      <pubDate>Sat, 12 Sep 2020 13:19:26 +0200</pubDate>
      <guid>https://hardcode.blog/posts/ai/20200912-ai/</guid>
      <description>L&amp;rsquo;intelligenza artificiale (AI) √® uno dei pi√π grandi cambiamenti tecnologici della nostra era, ma oltre alle applicazioni pratiche che vediamo gi√† oggi, il suo impatto sulla societ√† sar√† profondo e duraturo. Guardare al futuro ci permette di immaginare come l&amp;rsquo;AI possa influenzare la nostra vita quotidiana, il lavoro, l&amp;rsquo;economia e la struttura stessa delle societ√† nei decenni a venire. In questo articolo, esploriamo una tabella di marcia decennale, proiettandoci verso il 2100.</description>
    </item>
    <item>
      <title>Cosa fanno gli sviluppatori CRM?</title>
      <link>https://hardcode.blog/posts/crm/20210210-crm-developer/</link>
      <pubDate>Wed, 02 Sep 2020 19:38:58 +0200</pubDate>
      <guid>https://hardcode.blog/posts/crm/20210210-crm-developer/</guid>
      <description>Cosa fanno gli sviluppatori CRM? CRM √® l&amp;rsquo;acronimo di Customer Relationship Management, un termine usato per descrivere qualsiasi sistema utilizzato da un&amp;rsquo;azienda per gestire le sue interazioni relative ai clienti. I sistemi CRM hanno comunemente legami con diverse funzioni aziendali interne, comprese le vendite, il marketing, le comunicazioni e il servizio clienti.&#xA;In passato, i sistemi CRM erano molto analogici, incentrati sulle metodologie convenzionali di posta, telefono e mass media. Sebbene i call center facciano ancora parte delle moderne strategie di CRM, la maggior parte di questi altri componenti tradizionali √® stata sostituita con soluzioni basate su software.</description>
    </item>
    <item>
      <title>L&#39;Universit√† serve ancora?</title>
      <link>https://hardcode.blog/posts/20200902-universita-serve-ancora/</link>
      <pubDate>Wed, 02 Sep 2020 19:38:58 +0200</pubDate>
      <guid>https://hardcode.blog/posts/20200902-universita-serve-ancora/</guid>
      <description>Nel mondo contemporaneo, caratterizzato da rapide innovazioni tecnologiche e cambiamenti nel mercato del lavoro, una domanda ricorrente √®: l‚Äôuniversit√† serve ancora? La risposta, sebbene complessa, tende a confermare l&amp;rsquo;importanza di un&amp;rsquo;istruzione universitaria, pur riconoscendo il valore crescente dei corsi professionali e delle certificazioni. In questo blog post, esploreremo perch√© l‚Äôuniversit√† resta un pilastro fondamentale della formazione e come i corsi di breve durata possano comunque offrire un&amp;rsquo;importante introduzione al mondo del lavoro.</description>
    </item>
    <item>
      <title>La figura del CRM Developer: skill, opportunit√† e campo di azione</title>
      <link>https://hardcode.blog/posts/crm/20210110-le-skill-del-crm-developer/</link>
      <pubDate>Wed, 02 Sep 2020 19:38:58 +0200</pubDate>
      <guid>https://hardcode.blog/posts/crm/20210110-le-skill-del-crm-developer/</guid>
      <description>In un mondo sempre pi√π orientato alla gestione efficiente delle relazioni con i clienti, il ruolo del CRM Developer sta emergendo come una figura chiave nel panorama tecnologico. Ma chi √® esattamente un CRM Developer, quali competenze possiede e quali sono le sue opportunit√† di lavoro? Partendo da un recente annuncio che cerca sviluppatori specializzati in CRM, esploriamo questo affascinante ruolo.&#xA;Chi √® il CRM Developer? Il CRM Developer √® uno sviluppatore software specializzato nella progettazione, implementazione e manutenzione di sistemi di Customer Relationship Management (CRM).</description>
    </item>
    <item>
      <title>DevOps, il mistero dietro le sue skill</title>
      <link>https://hardcode.blog/posts/devops/20200801-cosa-e-un-devops/</link>
      <pubDate>Sat, 01 Aug 2020 08:16:42 +0200</pubDate>
      <guid>https://hardcode.blog/posts/devops/20200801-cosa-e-un-devops/</guid>
      <description>Negli ultimi anni, la figura del DevOps √® diventata centrale in molte organizzazioni tecnologiche. Ma cosa fa esattamente un DevOps? Quali competenze sono richieste per ricoprire questo ruolo cos√¨ strategico? Dietro il termine DevOps si nasconde una variet√† di competenze tecniche e soft skill che rendono questa figura un vero e proprio ponte tra il team di sviluppo software e il team di operations.&#xA;Chi √® il DevOps? Un DevOps √® un professionista che opera all‚Äôintersezione tra sviluppo e operations, lavorando per abbattere le barriere tra questi due mondi tradizionalmente separati.</description>
    </item>
    <item>
      <title>Flutter! Sei pronto?</title>
      <link>https://hardcode.blog/posts/trends/20200801-flutter/</link>
      <pubDate>Sat, 01 Aug 2020 08:16:42 +0200</pubDate>
      <guid>https://hardcode.blog/posts/trends/20200801-flutter/</guid>
      <description>Negli ultimi anni, il panorama dello sviluppo frontend ha subito enormi cambiamenti, passando dal desktop al web e ora dirigendosi verso orizzonti ancora inesplorati. Framework come Angular, React e Vue hanno definito l&amp;rsquo;era moderna dello sviluppo frontend web, ma ora, con il rapido avvento di nuove tecnologie e piattaforme, si comincia a intravedere l&amp;rsquo;alba di una nuova generazione. Potrebbe Flutter essere il dominatore del mondo frontend nella prossima era post-2030?</description>
    </item>
    <item>
      <title>La Pubblica Amministrazione, il treno del digitale √® sempre in ritardo</title>
      <link>https://hardcode.blog/posts/20200722-le-pa-sono-lente-ma-lente/</link>
      <pubDate>Wed, 22 Jul 2020 21:12:40 +0200</pubDate>
      <guid>https://hardcode.blog/posts/20200722-le-pa-sono-lente-ma-lente/</guid>
      <description>Negli ultimi anni, la trasformazione digitale ha rivoluzionato il mondo privato, portando a miglioramenti significativi in termini di efficienza, produttivit√† e accessibilit√† dei servizi. Tuttavia, la Pubblica Amministrazione (PA) sembra procedere con un passo pi√π lento. Mentre molte aziende private hanno abbracciato con entusiasmo l&amp;rsquo;era digitale, molte istituzioni pubbliche, incluse le scuole, lottano ancora per adattarsi a questa nuova realt√†. In questo blogpost, esploreremo le sfide e le opportunit√† legate alla digitalizzazione della PA.</description>
    </item>
    <item>
      <title>Le Features, queste sconosciute</title>
      <link>https://hardcode.blog/posts/software-design/20200701-features/</link>
      <pubDate>Wed, 01 Jul 2020 12:43:36 +0200</pubDate>
      <guid>https://hardcode.blog/posts/software-design/20200701-features/</guid>
      <description>Nel mondo dello sviluppo software, si sente parlare spesso di &amp;ldquo;feature&amp;rdquo;. Ma cosa si intende esattamente con questo termine, e perch√© √® cos√¨ centrale in ogni progetto moderno? In questo articolo cercheremo di esplorare il concetto di feature, la sua importanza nel ciclo di sviluppo software e come si integra con pratiche come le user story nell&amp;rsquo;Agile e i flussi di lavoro su Git, come il feature branch flow.&#xA;Cos&amp;rsquo;√® una Feature?</description>
    </item>
    <item>
      <title>PHP8, Dalle prime impressioni alle riflessioni sul futuro</title>
      <link>https://hardcode.blog/posts/php/20200621-php8/</link>
      <pubDate>Sun, 21 Jun 2020 12:58:30 +0200</pubDate>
      <guid>https://hardcode.blog/posts/php/20200621-php8/</guid>
      <description>Sono gi√† passati diversi anni dal lancio di PHP 8, eppure sembra ieri che si discuteva delle sue nuove feature come JIT (Just-in-Time Compiler) e le union types. Con il passare del tempo, PHP ha dimostrato di essere un linguaggio che sa come evolversi senza spezzare il legame con il passato. Ogni nuova versione porta miglioramenti significativi, ma sempre con l‚Äôobiettivo di garantire che le applicazioni esistenti possano continuare a funzionare senza intoppi.</description>
    </item>
    <item>
      <title>Neuralink: dalla fantascienza l&#39;inspirazione per la medicina</title>
      <link>https://hardcode.blog/posts/science/20200512-neuralink/</link>
      <pubDate>Tue, 12 May 2020 18:10:20 +0200</pubDate>
      <guid>https://hardcode.blog/posts/science/20200512-neuralink/</guid>
      <description>Neuralink, l&amp;rsquo;ambizioso progetto neuroscientifico di Elon Musk, sembra uscito direttamente da un romanzo di fantascienza. Eppure, questa tecnologia non √® frutto di fantasie futuristiche, ma un passo concreto verso una rivoluzione nel campo della medicina e delle neuroscienze. L&amp;rsquo;idea di poter interfacciare il cervello umano con un computer, potenzialmente restituendo mobilit√† e funzioni cognitive a persone affette da gravi patologie, √® un&amp;rsquo;innovazione che ha il potenziale di cambiare il modo in cui concepiamo il rapporto tra mente, corpo e tecnologia.</description>
    </item>
    <item>
      <title>WordPress, come adoperarlo al meglio</title>
      <link>https://hardcode.blog/posts/web/20200413-wordpress/</link>
      <pubDate>Mon, 13 Apr 2020 11:21:43 +0200</pubDate>
      <guid>https://hardcode.blog/posts/web/20200413-wordpress/</guid>
      <description>WordPress √® una delle piattaforme pi√π popolari per la creazione di siti web, grazie alla sua flessibilit√†, facilit√† d&amp;rsquo;uso e l&amp;rsquo;enorme ecosistema di plugin e temi. Tuttavia, utilizzarlo al meglio richiede una comprensione pi√π profonda delle sue funzionalit√†, dei suoi limiti e delle conoscenze tecniche necessarie. In questo articolo, esamineremo come sfruttare il potenziale di WordPress rimanendo sempre consapevoli che √® una piattaforma con specifiche limitazioni.&#xA;1. Conoscenza di Base di WordPress Prima di tutto, per usare WordPress in modo efficace, √® necessario avere una buona padronanza delle sue funzioni di base.</description>
    </item>
    <item>
      <title>Remote Working Spaghetti</title>
      <link>https://hardcode.blog/posts/rant/20200412-remote-working-spaghetti/</link>
      <pubDate>Sun, 12 Apr 2020 13:31:31 +0200</pubDate>
      <guid>https://hardcode.blog/posts/rant/20200412-remote-working-spaghetti/</guid>
      <description>Il lavoro da remoto √® come un bel piatto di spaghetti. S√¨, proprio cos√¨: spaghetti. E non parlo di quelli fatti bene, al dente, con la salsa perfettamente amalgamata. No, parlo di quel disastroso pasticcio che rischi di fare se non sai gestire bene le cose.&#xA;La salsa al lavoro remoto: troppe variabili Quando inizi a lavorare da remoto, ti dicono che √® facile. ‚ÄúBasta un laptop, una buona connessione e sei a posto!</description>
    </item>
    <item>
      <title>Nanotecnologie, facciamo il punto</title>
      <link>https://hardcode.blog/posts/science/20200409-nanotecnologie/</link>
      <pubDate>Thu, 09 Apr 2020 16:13:06 +0200</pubDate>
      <guid>https://hardcode.blog/posts/science/20200409-nanotecnologie/</guid>
      <description>Le nanotecnologie rappresentano uno dei campi pi√π affascinanti e rivoluzionari della scienza moderna. Grazie alle scoperte fatte negli ultimi decenni, stiamo assistendo a una trasformazione profonda in settori che spaziano dall‚Äôelettronica alla medicina, dall‚Äôenergia ai materiali avanzati. Ma cosa sono esattamente le nanotecnologie e quali sono le loro principali applicazioni? Facciamo il punto.&#xA;Che cosa sono le nanotecnologie? Le nanotecnologie si riferiscono allo studio e alla manipolazione della materia su scala nanometrica, ovvero dell&amp;rsquo;ordine di miliardesimi di metro (1 nm = 10‚Åª‚Åπ metri).</description>
    </item>
    <item>
      <title>La storia del Konami Code: una sequenza leggendaria</title>
      <link>https://hardcode.blog/posts/gaming/20200405-konami-code/</link>
      <pubDate>Sun, 05 Apr 2020 04:18:06 +0200</pubDate>
      <guid>https://hardcode.blog/posts/gaming/20200405-konami-code/</guid>
      <description>Era il 1986 quando Kazuhisa Hashimoto, un programmatore della Konami, stava lavorando alla conversione per NES del gioco Gradius. Durante lo sviluppo, trov√≤ il gioco troppo difficile da testare. Decise quindi di implementare una sequenza segreta di tasti che gli permettesse di ottenere tutti i power-up istantaneamente.&#xA;Quella sequenza di tasti, che doveva essere solo uno strumento di debug, fu accidentalmente lasciata nel gioco finale. Nacque cos√¨ il leggendario &amp;ldquo;Konami Code&amp;rdquo;:</description>
    </item>
    <item>
      <title>Marte, come riusciremo a sopravvivere?</title>
      <link>https://hardcode.blog/posts/science/20200404-marte/</link>
      <pubDate>Sat, 04 Apr 2020 04:18:06 +0200</pubDate>
      <guid>https://hardcode.blog/posts/science/20200404-marte/</guid>
      <description>Il tema della colonizzazione di Marte √® affascinante e solleva molte domande. Saremo noi a mettere piede sul Pianeta Rosso e a costruire una nuova civilt√†, o sar√† pi√π probabile che siano gli extraterrestri a farci una visita prima? Questi scenari, sebbene uno sia frutto della scienza e l&amp;rsquo;altro pi√π fantascientifico, offrono un&amp;rsquo;interessante occasione per fare un confronto dal punto di vista statistico.&#xA;Quanto √® probabile arrivare su Marte? La colonizzazione di Marte √® da anni l&amp;rsquo;obiettivo di molte agenzie spaziali, in particolare di Elon Musk e la sua SpaceX.</description>
    </item>
    <item>
      <title>Questo blog post √® una shell!</title>
      <link>https://hardcode.blog/posts/20200404-shell/</link>
      <pubDate>Sat, 04 Apr 2020 04:18:06 +0200</pubDate>
      <guid>https://hardcode.blog/posts/20200404-shell/</guid>
      <description># # Scrivi un comando, ovviamente tranne rm -fr /, non vogliamo distruggere il mondo, vero? # </description>
    </item>
    <item>
      <title>Full-stack, esistono davvero?</title>
      <link>https://hardcode.blog/posts/rant/20200305-fullstack/</link>
      <pubDate>Thu, 05 Mar 2020 10:51:18 +0200</pubDate>
      <guid>https://hardcode.blog/posts/rant/20200305-fullstack/</guid>
      <description>Ah, il full-stack developer. Questa figura ormai onnipresente negli annunci di lavoro, celebrata come l&amp;rsquo;unicorno del mondo tecnologico: colui che, da solo, riesce a dominare il frontend, il backend, i database, le reti, la sicurezza e, perch√© no, pure il design. Un essere mitologico che sarebbe capace di risolvere qualsiasi problema tecnico da solo, dallo sviluppo di un&amp;rsquo;intera piattaforma web alla sua messa in produzione.&#xA;Ma fermiamoci un attimo e riflettiamo.</description>
    </item>
    <item>
      <title>L&#39;Effetto Lifter: La Magia dell&#39;Alta Tensione e del Condensatore Volante</title>
      <link>https://hardcode.blog/posts/science/20200305-the-lifter/</link>
      <pubDate>Thu, 05 Mar 2020 10:51:18 +0200</pubDate>
      <guid>https://hardcode.blog/posts/science/20200305-the-lifter/</guid>
      <description>Negli anni, molti esperimenti amatoriali e scientifici hanno cercato di trovare metodi alternativi per il sollevamento e il movimento senza l&amp;rsquo;uso di meccanismi tradizionali come eliche o jet. Tra questi, uno dei fenomeni pi√π affascinanti e controversi √® il cosiddetto &amp;ldquo;effetto Lifter&amp;rdquo;. Questo effetto si verifica quando un dispositivo rudimentale, composto da un semplice condensatore d&amp;rsquo;aria, viene sottoposto ad alta tensione e sembra produrre una spinta che lo solleva nell&amp;rsquo;aria.</description>
    </item>
    <item>
      <title>Il ventennio telematico degli smartphone</title>
      <link>https://hardcode.blog/posts/20200202-smartphone-is-dead/</link>
      <pubDate>Sun, 02 Feb 2020 18:44:36 +0200</pubDate>
      <guid>https://hardcode.blog/posts/20200202-smartphone-is-dead/</guid>
      <description>Gli smartphone hanno dominato il panorama tecnologico per oltre due decenni, trasformandosi da semplici dispositivi di comunicazione a strumenti indispensabili per la nostra vita quotidiana. Tuttavia, ci sono sempre pi√π voci che affermano che gli smartphone non siano il punto di arrivo, ma piuttosto un ponte verso una tecnologia sostitutiva. Se consideriamo l‚Äôevoluzione rapida della tecnologia, √® lecito chiedersi: cosa ci sar√† dopo gli smartphone?&#xA;L&amp;rsquo;era post-smartphone: la miniaturizzazione del computing Una delle principali tendenze che potrebbe caratterizzare il futuro √® la miniaturizzazione e l&amp;rsquo;integrazione della tecnologia.</description>
    </item>
    <item>
      <title>I figli del coding, la nuova generazione di baby-automi</title>
      <link>https://hardcode.blog/posts/stem/20200201-coding-spaghetti/</link>
      <pubDate>Sat, 01 Feb 2020 02:13:32 +0200</pubDate>
      <guid>https://hardcode.blog/posts/stem/20200201-coding-spaghetti/</guid>
      <description>Nel panorama educativo contemporaneo, lo STEM (Scienza, Tecnologia, Ingegneria e Matematica) √® diventato un mantra, una panacea per preparare i giovani al futuro. Tuttavia, dietro questa facciata di progresso tecnologico si cela un rischio insidioso: la possibilit√† di trasformare i nostri bambini in meri automi, piuttosto che in pensatori critici e creativi.&#xA;Il miraggio del coding L&amp;rsquo;introduzione del coding nelle scuole √® stata salutata come una rivoluzione educativa. Si promette ai genitori che i loro figli diventeranno i prossimi Steve Jobs o Mark Zuckerberg.</description>
    </item>
    <item>
      <title>Docker: Il cuore di GitLab CI</title>
      <link>https://hardcode.blog/posts/cicd/20210401-tools-for-gitlab-ci-developer/</link>
      <pubDate>Wed, 01 Jan 2020 12:10:00 +0200</pubDate>
      <guid>https://hardcode.blog/posts/cicd/20210401-tools-for-gitlab-ci-developer/</guid>
      <description>Introduzione Docker √® ormai dappertutto. In pochi anni, √® diventato uno strumento imprescindibile nel panorama DevOps, rivoluzionando il modo in cui sviluppatori e ingegneri gestiscono il ciclo di vita delle applicazioni. Oggi, voglio condividere con voi come Docker sia diventato il cuore pulsante della Continuous Integration (CI) di GitLab e come questa integrazione renda le pipeline di sviluppo incredibilmente potenti ed efficienti.&#xA;Docker e GitLab CI: Una combinazione vincente GitLab CI √® una piattaforma di Continuous Integration e Continuous Delivery (CI/CD) che permette ai team di sviluppo di automatizzare la costruzione, il testing e il deployment delle applicazioni.</description>
    </item>
    <item>
      <title>Docker: Un ambiente ideale per il CRM vtiger</title>
      <link>https://hardcode.blog/posts/vtiger/20210401-tools-for-vtiger-developer/</link>
      <pubDate>Wed, 01 Jan 2020 12:10:00 +0200</pubDate>
      <guid>https://hardcode.blog/posts/vtiger/20210401-tools-for-vtiger-developer/</guid>
      <description>Nel mondo dello sviluppo software, la containerizzazione √® diventata una pratica fondamentale per garantire ambienti di sviluppo consistenti e facilmente gestibili. Docker, in particolare, ha rivoluzionato il modo in cui gli sviluppatori creano, distribuiscono e eseguono le applicazioni. In questo articolo, esploreremo come utilizzare Docker per sviluppare vtiger CRM, un potente sistema di gestione delle relazioni con i clienti (CRM).&#xA;Perch√© scegliere Docker per vtiger? Ambienti consistenti: Docker permette di creare ambienti di sviluppo che sono identici a quelli di produzione.</description>
    </item>
    <item>
      <title>My First Post</title>
      <link>https://hardcode.blog/posts/19700101-my-first-post/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:01 +0000</pubDate>
      <guid>https://hardcode.blog/posts/19700101-my-first-post/</guid>
      <description>As first post, I want to move your focus to one the most important technological constant of our era. I&amp;rsquo;m talking about the first second of the Unix time, and the word joke inside.&#xA;Read more:&#xA;https://en.wikipedia.org/wiki/Unix_time </description>
    </item>
  </channel>
</rss>
