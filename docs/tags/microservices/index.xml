<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on HARDCODE.BLOG</title>
    <link>https://hardcode.blog/tags/microservices/</link>
    <description>Recent content in Microservices on HARDCODE.BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-en</language>
    <copyright>© Francesco Bianco</copyright>
    <lastBuildDate>Tue, 17 Sep 2024 15:03:43 +0000</lastBuildDate>
    <atom:link href="https://hardcode.blog/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Il Circuit Breaker: Il Pattern che ha Salvato Netflix</title>
      <link>https://hardcode.blog/posts/pattern/20240917-circuit-breaker/</link>
      <pubDate>Tue, 17 Sep 2024 15:03:43 +0000</pubDate>
      <guid>https://hardcode.blog/posts/pattern/20240917-circuit-breaker/</guid>
      <description>Nell&amp;rsquo;ingegneria del software, la resilienza dei sistemi è fondamentale, soprattutto quando si tratta di servizi ad alta disponibilità. Oggi esploreremo un pattern di progettazione che ha rivoluzionato la gestione del carico in sistemi distribuiti: il Circuit Breaker.&#xA;La Storia di un Quasi Disastro Immaginate la scena: un importante servizio di streaming (che chiameremo &amp;ldquo;StreamFlix&amp;rdquo;) si prepara al lancio di una nuova serie TV attesissima. L&amp;rsquo;hype è alle stelle, i fan sono pronti a premere play&amp;hellip; ma c&amp;rsquo;è un problema.</description>
    </item>
    <item>
      <title>L&#39;Evoluzione dell&#39;Architettura Software: Dal Monolitico ai Microservizi e Oltre</title>
      <link>https://hardcode.blog/posts/20240911-dal-monolitico-ai-microservizi-e-oltre/</link>
      <pubDate>Wed, 11 Sep 2024 15:55:04 +0000</pubDate>
      <guid>https://hardcode.blog/posts/20240911-dal-monolitico-ai-microservizi-e-oltre/</guid>
      <description>Prefazione Caro lettore,&#xA;Benvenuto in questo viaggio attraverso l&amp;rsquo;evoluzione dell&amp;rsquo;architettura software. Questo post è strutturato per soddisfare le esigenze sia dei neofiti che degli esperti nel campo dell&amp;rsquo;ingegneria del software.&#xA;Se hai già familiarità e padronanza con i microservizi, ti suggeriamo di saltare direttamente alla Parte II, che inizia dalla sezione &amp;ldquo;Architetture Serverless&amp;rdquo;. Qui troverai approfondimenti sulle tendenze più recenti, best practices avanzate e riflessioni sul futuro dell&amp;rsquo;architettura software.&#xA;Se invece sei nuovo in questo campo o desideri rinfrescare le tue conoscenze sulle basi, ti invitiamo a iniziare dalla Parte I.</description>
    </item>
  </channel>
</rss>
